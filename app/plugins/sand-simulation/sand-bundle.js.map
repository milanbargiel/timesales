{
  "version": 3,
  "sources": ["../../src/frontend/helpers/getSeconds.ts", "../../src/frontend/helpers/debounce.ts", "../../src/frontend/helpers/getDims.ts", "../../src/frontend/helpers/go.ts", "../../src/frontend/createBackend.ts", "../../src/frontend/createCanvas.ts", "../../src/frontend/createSound.ts", "../../src/frontend/perfomanceKeeper.ts", "../../src/frontend/timeKeeper.ts", "../../src/frontend/index.ts"],
  "sourcesContent": ["export default () => {\n  return Math.floor(Date.now() / 1000);\n}", "export default (callback, time) => {\n  let interval;\n  return (...args) => {\n    clearTimeout(interval);\n    interval = setTimeout(() => {\n      interval = null;\n      callback(...args);\n    }, time);\n  };\n};", "let scale = 0.5;\n\nexport default () => {\n  let width = 200;\n  let height = 200;\n\n  if (process[\"browser\"] || \"innerWidth\" in globalThis) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n  }\n\n  width *= scale;\n  height *= scale;\n\n  height = Math.round(height / 100) * 100;\n  width = Math.round(width / 100) * 100;\n\n  return {\n    width,\n    height,\n    get scale() {\n      return scale;\n    },\n    set scale(v) {\n      scale = v;\n    },\n  };\n};\n", "//@ts-nocheck\n\n// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n//\n// This file has been modified for use by the TinyGo compiler.\n\n// Map multiple JavaScript environments to a single common API,\n// preferring web standards over Node.js API.\n//\n// Environments considered:\n// - Browsers\n// - Node.js\n// - Electron\n// - Parcel\n\nif (typeof global !== \"undefined\") {\n\t// global already exists\n} else if (typeof window !== \"undefined\") {\n\twindow.global = window;\n} else if (typeof self !== \"undefined\") {\n\tself.global = self;\n} else {\n\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n}\n\n// if (!global.require && typeof require !== \"undefined\") {\n// \tglobal.require = require;\n// }\n\n// if (!global.fs && global.require) {\n// \tconst fs = require(\"fs\");\n// \tif (typeof fs === \"object\" && fs !== null && Object.keys(fs).length !== 0) {\n// \t\tglobal.fs = fs;\n// \t}\n// }\n\nconst enosys = () => {\n\tconst err = new Error(\"not implemented\");\n\terr.code = \"ENOSYS\";\n\treturn err;\n};\n\nif (!global.fs) {\n\tlet outputBuf = \"\";\n\tglobal.fs = {\n\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\twriteSync(fd, buf) {\n\t\t\toutputBuf += decoder.decode(buf);\n\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\tif (nl != -1) {\n\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t}\n\t\t\treturn buf.length;\n\t\t},\n\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\tcallback(enosys());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\tcallback(null, n);\n\t\t},\n\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\tclose(fd, callback) { callback(enosys()); },\n\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\tfstat(fd, callback) { callback(enosys()); },\n\t\tfsync(fd, callback) { callback(null); },\n\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\tlink(path, link, callback) { callback(enosys()); },\n\t\tlstat(path, callback) { callback(enosys()); },\n\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\treaddir(path, callback) { callback(enosys()); },\n\t\treadlink(path, callback) { callback(enosys()); },\n\t\trename(from, to, callback) { callback(enosys()); },\n\t\trmdir(path, callback) { callback(enosys()); },\n\t\tstat(path, callback) { callback(enosys()); },\n\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\tunlink(path, callback) { callback(enosys()); },\n\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t};\n}\n\nif (!global.process) {\n\tglobal.process = {\n\t\tgetuid() { return -1; },\n\t\tgetgid() { return -1; },\n\t\tgeteuid() { return -1; },\n\t\tgetegid() { return -1; },\n\t\tgetgroups() { throw enosys(); },\n\t\tpid: -1,\n\t\tppid: -1,\n\t\tumask() { throw enosys(); },\n\t\tcwd() { throw enosys(); },\n\t\tchdir() { throw enosys(); },\n\t}\n}\n\nif (!global.crypto && global.require) {\n\tconst nodeCrypto = require(\"crypto\");\n\tglobal.crypto = {\n\t\tgetRandomValues(b) {\n\t\t\tnodeCrypto.randomFillSync(b);\n\t\t},\n\t};\n}\nif (!global.crypto) {\n\tthrow new Error(\"global.crypto is not available, polyfill required (getRandomValues only)\");\n}\n\nif (!global.performance) {\n\tglobal.performance = {\n\t\tnow() {\n\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t},\n\t};\n}\n\nif (!global.TextEncoder && global.require) {\n\tglobal.TextEncoder = require(\"util\").TextEncoder;\n}\nif (!global.TextEncoder) {\n\tthrow new Error(\"global.TextEncoder is not available, polyfill required\");\n}\n\nif (!global.TextDecoder && global.require) {\n\tglobal.TextDecoder = require(\"util\").TextDecoder;\n}\nif (!global.TextDecoder) {\n\tthrow new Error(\"global.TextDecoder is not available, polyfill required\");\n}\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder(\"utf-8\");\nvar logLine = [];\n\nexport default class {\n\n\t_values: any[] = [];\n\n\t_inst: any;\n\t_ids: Map<string, any>;\n\t_idPool: string[]\n\n\t_goRefCounts: number[];\n\n\t_callbackTimeouts: Map<string, number>;\n\t_nextCallbackTimeoutID: number;\n\t_resolveExitPromise: () => void;\n\t_pendingEvent: any;\n\n\t_resolveCallbackPromise: () => void;\n\n\texited: boolean = false;\n\n\timportObject: { [key: string]: any } = {};\n\n\tconstructor() {\n\t\tthis._callbackTimeouts = new Map();\n\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\tconst mem = () => {\n\t\t\t// The buffer may change when requesting more memory.\n\t\t\treturn new DataView(this._inst.exports.memory.buffer);\n\t\t}\n\n\t\tconst setInt64 = (addr, v) => {\n\t\t\tmem().setUint32(addr + 0, v, true);\n\t\t\tmem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t}\n\n\t\tconst getInt64 = (addr) => {\n\t\t\tconst low = mem().getUint32(addr + 0, true);\n\t\t\tconst high = mem().getInt32(addr + 4, true);\n\t\t\treturn low + high * 4294967296;\n\t\t}\n\n\t\tconst loadValue = (addr) => {\n\t\t\tconst f = mem().getFloat64(addr, true);\n\t\t\tif (f === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!isNaN(f)) {\n\t\t\t\treturn f;\n\t\t\t}\n\n\t\t\tconst id = mem().getUint32(addr, true);\n\t\t\treturn this._values[id];\n\t\t}\n\n\t\tconst storeValue = (addr, v) => {\n\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\tif (typeof v === \"number\") {\n\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (v === 0) {\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 1, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmem().setFloat64(addr, v, true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (v) {\n\t\t\t\tcase undefined:\n\t\t\t\t\tmem().setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase null:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 2, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase true:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 3, true);\n\t\t\t\t\treturn;\n\t\t\t\tcase false:\n\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\tmem().setUint32(addr, 4, true);\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet id = this._ids.get(v);\n\t\t\tif (id === undefined) {\n\t\t\t\tid = this._idPool.pop();\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._values.length;\n\t\t\t\t}\n\t\t\t\tthis._values[id] = v;\n\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\tthis._ids.set(v, id);\n\t\t\t}\n\t\t\tthis._goRefCounts[id]++;\n\t\t\tlet typeFlag = 1;\n\t\t\tswitch (typeof v) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"symbol\":\n\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmem().setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\tmem().setUint32(addr, id, true);\n\t\t}\n\n\t\tconst loadSlice = (array, len) => {\n\t\t\treturn new Uint8Array(this._inst.exports.memory.buffer, array, len);\n\t\t}\n\n\t\tconst loadSliceOfValues = (array, len) => {\n\t\t\tconst a = new Array(len);\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tconst loadString = (ptr, len) => {\n\t\t\treturn decoder.decode(new DataView(this._inst.exports.memory.buffer, ptr, len));\n\t\t}\n\n\t\tconst timeOrigin = Date.now() - performance.now();\n\t\tthis.importObject = {\n\t\t\twasi_unstable: {\n\t\t\t\t// https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-api.md#__wasi_fd_write\n\t\t\t\tfd_write: function (fd, iovs_ptr, iovs_len, nwritten_ptr) {\n\t\t\t\t\tlet nwritten = 0;\n\t\t\t\t\tif (fd == 1) {\n\t\t\t\t\t\tfor (let iovs_i = 0; iovs_i < iovs_len; iovs_i++) {\n\t\t\t\t\t\t\tlet iov_ptr = iovs_ptr + iovs_i * 8; // assuming wasm32\n\t\t\t\t\t\t\tlet ptr = mem().getUint32(iov_ptr + 0, true);\n\t\t\t\t\t\t\tlet len = mem().getUint32(iov_ptr + 4, true);\n\t\t\t\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\t\t\t\tlet c = mem().getUint8(ptr + i);\n\t\t\t\t\t\t\t\tif (c == 13) { // CR\n\t\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t\t} else if (c == 10) { // LF\n\t\t\t\t\t\t\t\t\t// write line\n\t\t\t\t\t\t\t\t\tlet line = decoder.decode(new Uint8Array(logLine));\n\t\t\t\t\t\t\t\t\tlogLine = [];\n\t\t\t\t\t\t\t\t\tconsole.log(line);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlogLine.push(c);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('invalid file descriptor:', fd);\n\t\t\t\t\t}\n\t\t\t\t\tmem().setUint32(nwritten_ptr, nwritten, true);\n\t\t\t\t\treturn 0;\n\t\t\t\t},\n\t\t\t},\n\t\t\tenv: {\n\t\t\t\t// func ticks() float64\n\t\t\t\t\"runtime.ticks\": () => {\n\t\t\t\t\treturn timeOrigin + performance.now();\n\t\t\t\t},\n\n\t\t\t\t// func sleepTicks(timeout float64)\n\t\t\t\t\"runtime.sleepTicks\": (timeout) => {\n\t\t\t\t\t// Do not sleep, only reactivate scheduler after the given timeout.\n\t\t\t\t\tsetTimeout(this._inst.exports.go_scheduler, timeout);\n\t\t\t\t},\n\n\t\t\t\t// func Exit(code int)\n\t\t\t\t\"syscall.Exit\": (code) => {\n\t\t\t\t\tthrow 'trying to exit with code ' + code;\n\t\t\t\t},\n\n\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t// Note: TinyGo does not support finalizers so this should never be\n\t\t\t\t\t// called.\n\t\t\t\t\tconsole.error('syscall/js.finalizeRef not implemented');\n\t\t\t\t},\n\n\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\"syscall/js.stringVal\": (ret_ptr, value_ptr, value_len) => {\n\t\t\t\t\tconst s = loadString(value_ptr, value_len);\n\t\t\t\t\tstoreValue(ret_ptr, s);\n\t\t\t\t},\n\n\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\"syscall/js.valueGet\": (retval, v_addr, p_ptr, p_len) => {\n\t\t\t\t\tlet prop = loadString(p_ptr, p_len);\n\t\t\t\t\tlet value = loadValue(v_addr);\n\t\t\t\t\tlet result = Reflect.get(value, prop);\n\t\t\t\t\tstoreValue(retval, result);\n\t\t\t\t},\n\n\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\"syscall/js.valueSet\": (v_addr, p_ptr, p_len, x_addr) => {\n\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\tconst p = loadString(p_ptr, p_len);\n\t\t\t\t\tconst x = loadValue(x_addr);\n\t\t\t\t\tReflect.set(v, p, x);\n\t\t\t\t},\n\n\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\"syscall/js.valueDelete\": (v_addr, p_ptr, p_len) => {\n\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\tconst p = loadString(p_ptr, p_len);\n\t\t\t\t\tReflect.deleteProperty(v, p);\n\t\t\t\t},\n\n\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\"syscall/js.valueIndex\": (ret_addr, v_addr, i) => {\n\t\t\t\t\tstoreValue(ret_addr, Reflect.get(loadValue(v_addr), i));\n\t\t\t\t},\n\n\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\"syscall/js.valueSetIndex\": (v_addr, i, x_addr) => {\n\t\t\t\t\tReflect.set(loadValue(v_addr), i, loadValue(x_addr));\n\t\t\t\t},\n\n\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\"syscall/js.valueCall\": (ret_addr, v_addr, m_ptr, m_len, args_ptr, args_len) => {\n\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\tconst name = loadString(m_ptr, m_len);\n\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst m = Reflect.get(v, name);\n\t\t\t\t\t\tstoreValue(ret_addr, Reflect.apply(m, v, args));\n\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\"syscall/js.valueInvoke\": (ret_addr, v_addr, args_ptr, args_len) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len);\n\t\t\t\t\t\tstoreValue(ret_addr, Reflect.apply(v, undefined, args));\n\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\"syscall/js.valueNew\": (ret_addr, v_addr, args_ptr, args_len) => {\n\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tstoreValue(ret_addr, Reflect.construct(v, args));\n\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\"syscall/js.valueLength\": (v_addr) => {\n\t\t\t\t\treturn loadValue(v_addr).length;\n\t\t\t\t},\n\n\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\"syscall/js.valuePrepareString\": (ret_addr, v_addr) => {\n\t\t\t\t\tconst s = String(loadValue(v_addr));\n\t\t\t\t\tconst str = encoder.encode(s);\n\t\t\t\t\tstoreValue(ret_addr, str);\n\t\t\t\t\tsetInt64(ret_addr + 8, str.length);\n\t\t\t\t},\n\n\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\"syscall/js.valueLoadString\": (v_addr, slice_ptr, slice_len, slice_cap) => {\n\t\t\t\t\tconst str = loadValue(v_addr);\n\t\t\t\t\tloadSlice(slice_ptr, slice_len).set(str);\n\t\t\t\t},\n\n\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\"syscall/js.valueInstanceOf\": (v_addr, t_addr) => {\n\t\t\t\t\treturn loadValue(v_addr) instanceof loadValue(t_addr);\n\t\t\t\t},\n\n\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\"syscall/js.copyBytesToGo\": (ret_addr, dest_addr, dest_len, dest_cap, source_addr) => {\n\t\t\t\t\tlet num_bytes_copied_addr = ret_addr;\n\t\t\t\t\tlet returned_status_addr = ret_addr + 4; // Address of returned boolean status variable\n\n\t\t\t\t\tconst dst = loadSlice(dest_addr, dest_len);\n\t\t\t\t\tconst src = loadValue(source_addr);\n\t\t\t\t\tif (!(src instanceof Uint8Array)) {\n\t\t\t\t\t\tmem().setUint8(returned_status_addr, 0); // Return \"not ok\" status\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\tsetInt64(num_bytes_copied_addr, toCopy.length);\n\t\t\t\t\tmem().setUint8(returned_status_addr, 1); // Return \"ok\" status\n\t\t\t\t},\n\n\t\t\t\t// copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t// Originally copied from upstream Go project, then modified:\n\t\t\t\t//   https://github.com/golang/go/blob/3f995c3f3b43033013013e6c7ccc93a9b1411ca9/misc/wasm/wasm_exec.js#L404-L416\n\t\t\t\t\"syscall/js.copyBytesToJS\": (ret_addr, dest_addr, source_addr, source_len, source_cap) => {\n\t\t\t\t\tlet num_bytes_copied_addr = ret_addr;\n\t\t\t\t\tlet returned_status_addr = ret_addr + 4; // Address of returned boolean status variable\n\n\t\t\t\t\tconst dst = loadValue(dest_addr);\n\t\t\t\t\tconst src = loadSlice(source_addr, source_len);\n\t\t\t\t\tif (!(dst instanceof Uint8Array)) {\n\t\t\t\t\t\tmem().setUint8(returned_status_addr, 0); // Return \"not ok\" status\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\tsetInt64(num_bytes_copied_addr, toCopy.length);\n\t\t\t\t\tmem().setUint8(returned_status_addr, 1); // Return \"ok\" status\n\t\t\t\t},\n\t\t\t}\n\t\t};\n\t}\n\n\tasync run(instance) {\n\t\tthis._inst = instance;\n\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\tNaN,\n\t\t\t0,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tglobal,\n\t\t\tthis,\n\t\t];\n\t\tthis._goRefCounts = []; // number of references that Go has to a JS value, indexed by reference id\n\t\tthis._ids = new Map();  // mapping from JS values to reference ids\n\t\tthis._idPool = [];      // unused ids that have been garbage collected\n\t\tthis.exited = false;    // whether the Go program has exited\n\n\t\tconst mem = new DataView(this._inst.exports.memory.buffer)\n\n\t\twhile (true) {\n\t\t\tconst callbackPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveCallbackPromise = () => {\n\t\t\t\t\tif (this.exited) {\n\t\t\t\t\t\tthrow new Error(\"bad callback: Go program has already exited\");\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(resolve, 0); // make sure it is asynchronous\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis._inst.exports._start();\n\t\t\tif (this.exited) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tawait callbackPromise;\n\t\t}\n\t}\n\n\t_resume() {\n\t\tif (this.exited) {\n\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t}\n\t\tthis._inst.exports.resume();\n\t\tif (this.exited) {\n\t\t\tthis._resolveExitPromise();\n\t\t}\n\t}\n\n\t_makeFuncWrapper(id) {\n\t\tconst go = this;\n\t\treturn function () {\n\t\t\tconst event = { id: id, this: this, args: arguments, result: {} };\n\t\t\tgo._pendingEvent = event;\n\t\t\tgo._resume();\n\t\t\treturn event.result;\n\t\t};\n\t}\n}", "import { Go } from \"./helpers\"\n\nconst go = new Go();\n\nlet wasm;\n\nexport default (WASM_URL = 'build/sand-backend.wasm'): Promise<Backend> => new Promise((resolve, reject) => {\n\n  if ('instantiateStreaming' in WebAssembly) {\n    WebAssembly.instantiateStreaming(fetch(WASM_URL), go.importObject).then(function (obj) {\n      wasm = obj.instance;\n      go.run(wasm);\n      resolve(wasm.exports);\n    })\n  } else {\n    fetch(WASM_URL).then(resp =>\n      resp.arrayBuffer()\n    ).then(bytes =>\n      WebAssembly.instantiate(bytes, go.importObject).then(function (obj) {\n        wasm = obj.instance;\n        go.run(wasm);\n        resolve(wasm.exports);\n      })\n    )\n  }\n});", "import FragmentShaderSource from \"./shader/Main.frag\";\nimport VertexShaderSource from \"./shader/Main.vert\";\n\nexport default ({\n  pixels,\n  width,\n  height,\n}: {\n  pixels: Uint8Array;\n  width: number;\n  height: number;\n}) => {\n  var canvas = document.createElement(\"canvas\");\n  document.body.append(canvas);\n\n  canvas.width = width;\n  canvas.height = height;\n\n  const gl = canvas.getContext(\"webgl\");\n\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, VertexShaderSource);\n  gl.compileShader(vertexShader);\n\n  if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n    console.error(gl.getShaderInfoLog(vertexShader));\n    throw new Error(\"Failed to compile vertex shader\");\n  }\n\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, FragmentShaderSource);\n  gl.compileShader(fragmentShader);\n\n  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n    console.error(gl.getShaderInfoLog(fragmentShader));\n    throw new Error(\"Failed to compile fragment shader\");\n  }\n\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    console.error(gl.getProgramInfoLog(program));\n    throw new Error(\"Failed to link program\");\n  }\n\n  gl.useProgram(program);\n\n  const positionLocation = gl.getAttribLocation(program, \"a_position\");\n  const resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n  gl.uniform2f(resolutionLocation, canvas.width, canvas.height);\n\n  const debugLocation = gl.getUniformLocation(program, \"u_debug\");\n  gl.uniform1f(debugLocation, 0);\n\n  //@ts-ignore\n  window.setDebug = (v) => {\n    gl.uniform1f(debugLocation, v ? 1 : 0);\n  };\n\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([-1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1]),\n    gl.STATIC_DRAW\n  );\n\n  gl.enableVertexAttribArray(positionLocation);\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n  function update() {\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.LUMINANCE,\n      width,\n      height,\n      0,\n      gl.LUMINANCE,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  function resize(_w, _h, p) {\n    width = _w;\n    height = _h;\n    pixels = p;\n  }\n\n  return {\n    update,\n    resize,\n    get width() {\n      return width;\n    },\n    get height() {\n      return height;\n    },\n    el: canvas,\n  };\n};\n", "export default () => {\n  var AudioContext =\n    window.AudioContext || // Default\n    window[\"webkitAudioContext\"] || // Safari and old versions of Chrome\n    false;\n\n  if (!AudioContext) {\n    return {\n      setVolume: (v) => {},\n    };\n  }\n\n  const ctx: AudioContext = new AudioContext();\n\n  const bufferSize = 4096;\n  const pinkNoise = (function () {\n    let b0, b1, b2, b3, b4, b5, b6;\n    b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n    //const node = new AudioWorkletNode(ctx, \"\");\n    const node = ctx.createScriptProcessor(bufferSize, 1, 1);\n    node.onaudioprocess = function (e) {\n      const output = e.outputBuffer.getChannelData(0);\n      for (let i = 0; i < bufferSize; i++) {\n        const white = Math.random() * 2 - 1;\n        b0 = 0.99886 * b0 + white * 0.0555179;\n        b1 = 0.99332 * b1 + white * 0.0750759;\n        b2 = 0.969 * b2 + white * 0.153852;\n        b3 = 0.8665 * b3 + white * 0.3104856;\n        b4 = 0.55 * b4 + white * 0.5329522;\n        b5 = -0.7616 * b5 - white * 0.016898;\n        output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n        output[i] *= 0.011; // (roughly) compensate for gain\n        b6 = white * 0.115926;\n      }\n    };\n    return node;\n  })();\n\n  const gainNode = ctx.createGain();\n\n  gainNode.gain.value = 0.1;\n\n  pinkNoise.connect(gainNode);\n\n  gainNode.connect(ctx.destination);\n\n  return {\n    setVolume: (v) => {\n      gainNode.gain.value = v;\n    },\n    pause() {\n      ctx.state === \"running\" && ctx.suspend();\n    },\n    resume() {\n      ctx.state !== \"running\" && ctx.resume();\n    },\n  };\n};\n", "import { getDims } from \"./helpers\";\n\nexport default (resize) => {\n  let t,\n    i = 0;\n  let measurements = [];\n\n  const optimalMS = 25;\n  const worstMaxMS = 100;\n\n  const dims = getDims();\n\n  return {\n    start: () => {\n      t = performance.now();\n    },\n    end: () => {\n      i++;\n\n      if (t) {\n        // Make sure we only collect 120 measurements, eg 2 seconds\n        measurements = [...measurements.slice(-119), performance.now() - t];\n      }\n\n      // Every second\n      if (i % 60 == 0) {\n        // Calculate the average execution time this is in milliseconds;\n        let sum = 0;\n        for (let i = 0; i < measurements.length; i++) {\n          sum += measurements[i];\n        }\n        const avg = Math.floor(sum / measurements.length);\n\n        console.log(\"[PERF] average exec time\", avg, \"ms\");\n\n        // Dont do anything if we are around 20ms of the optimal ms\n        if (avg > optimalMS - 20 && avg < optimalMS + 20) return;\n        console.log(\"[PERF] \", avg, \"ms\");\n\n        if (avg < optimalMS) {\n          // If we are below the optimal ms\n          // we can scale up a bit\n          const howGoodIsIt = (optimalMS - avg) / optimalMS;\n\n          const s = 1 + howGoodIsIt * 0.25;\n          console.log(\"[PERF] increase scale by\", s);\n\n          dims.scale = Math.min(dims.scale * s, 2);\n        } else {\n          const howBadIsIt = Math.min(avg - optimalMS, worstMaxMS) / worstMaxMS;\n\n          const s = 1 - howBadIsIt * 0.25;\n          console.log(\"[PERF] decrease scale by\", s);\n          dims.scale *= s;\n        }\n\n        // Apply the scale calculated above\n        const { width, height } = getDims();\n        resize(width, height);\n      }\n    },\n  };\n};\n", "import { getSeconds } from \"./helpers\";\n\nlet duration = 60;\nlet time = 0;\nlet progress = 1;\nlet isPaused = false;\n\nlet lN;\nlet lastTime = getSeconds();\nconst update = () => {\n\n  if (isPaused) return;\n\n  let cTime = getSeconds();\n\n  let elapsedTimeSinceLastUpdate = cTime - lastTime;\n\n\n  time += elapsedTimeSinceLastUpdate;\n\n  if (elapsedTimeSinceLastUpdate > 0) {\n    lastTime = cTime;\n  }\n\n\n  const n = duration - time;\n  progress = Math.floor(n / duration * 100) / 100;\n  if (!lN) lN = n;\n\n\n  lN = n;\n}\n\nfunction pause() {\n  isPaused = true;\n  console.log(\"[TIME] paused\")\n}\n\nfunction resume() {\n  lastTime = getSeconds();\n  isPaused = false;\n  console.log(\"[TIME] unpaused\")\n}\n\n\nfunction setDuration(d) {\n  console.log(\"[TIME] set duration \", d);\n  duration = d;\n}\n\n\nfunction getProgress() {\n  return progress;\n}\n\nfunction setProgress(p) {\n  time = duration - Math.floor(duration * p);\n  console.log(\"[TIME] set progress \", time);\n}\n\n\nexport default {\n  update,\n  getProgress,\n  setDuration,\n  setProgress,\n  pause,\n  resume\n}", "import createBackend from \"./createBackend\";\nimport createCanvas from \"./createCanvas\";\nimport createSound from \"./createSound\";\nimport { debounce, getDims } from \"./helpers\";\nimport createPerformanceKeeper from \"./perfomanceKeeper\";\nimport timeKeeper from \"./timeKeeper\";\n\nlet backend: Backend;\nlet canvas: ReturnType<typeof createCanvas>;\nlet sound: ReturnType<typeof createSound>;\n\nlet simPaused = false;\n\nasync function init({\n  duration,\n  progress,\n  wasmPath,\n}: {\n  duration: number;\n  progress: number;\n  wasmPath: string;\n}) {\n  let { width, height } = getDims();\n\n  console.log(\"INIT STREAM\", { ...arguments[0] });\n\n  let pixels = new Uint8Array(width * height);\n\n  // This is ugly but i have not found a\n  // better way to pass a reference of this array\n  // to the wasm backend\n  window[\"sandPixelArray\"] = pixels;\n\n  backend = await createBackend(wasmPath);\n  await backend.CreateCanvas(width, height);\n\n  canvas = createCanvas({ pixels, width, height });\n\n  sound = createSound();\n\n  timeKeeper.setDuration(duration || 60);\n  timeKeeper.setProgress(progress || 1);\n\n  function resize(_w, _h) {\n    if (_w != width || _h != height) {\n      width = _w;\n      height = _h;\n\n      pixels = new Uint8Array(width * height);\n      window[\"sandPixelArray\"] = pixels;\n      backend.Resize(width, height);\n      canvas.resize(width, height, pixels);\n    }\n  }\n\n  const performanceKeeper = createPerformanceKeeper(resize);\n\n  let _promise;\n  let updates = 100;\n  let isResizing = false;\n  let isSimFinished = false;\n\n  async function updateSim() {\n    if (_promise) return;\n    isSimFinished = await backend.IsFinished();\n    _promise = await backend.Update(timeKeeper.getProgress());\n    updates = _promise;\n    _promise = false;\n  }\n\n  async function update() {\n    if (!simPaused && !isResizing && !isSimFinished) {\n      /*-->*/ await performanceKeeper.start();\n      await updateSim();\n      timeKeeper.update();\n      sound.setVolume(Math.min(0.05, updates / 4000000));\n      canvas.update();\n      /*-->*/ await performanceKeeper.end();\n    } else {\n      sound.pause();\n    }\n\n    requestAnimationFrame(update);\n  }\n\n  window.addEventListener(\n    \"resize\",\n    debounce(() => {\n      const { width: _w, height: _h } = getDims();\n      resize(_w, _h);\n    }, 500)\n  );\n\n  update();\n}\n\nfunction pause() {\n  simPaused = !simPaused;\n  if (simPaused) {\n    timeKeeper.pause();\n    sound.pause();\n  } else {\n    timeKeeper.resume();\n    sound.resume();\n  }\n}\n\nfunction play() {\n  if (simPaused) {\n    simPaused = false;\n    timeKeeper.resume();\n    sound.resume();\n  }\n}\n\nfunction getProgress() {\n  return timeKeeper.getProgress();\n}\n\nwindow.addEventListener(\"blur\", pause);\nwindow.addEventListener(\"focus\", play);\nwindow.addEventListener(\"mouseover\", play);\nwindow.addEventListener(\"mouseout\", play);\n\nexport default {\n  init,\n  play,\n  pause,\n  getProgress,\n};\n"],
  "mappings": ";AAAA,IAAO,qBAAQ,MAAM;AACnB,SAAO,KAAK,MAAM,KAAK,QAAQ;AAAA;;;ACDjC,IAAO,mBAAQ,CAAC,UAAU,UAAS;AACjC,MAAI;AACJ,SAAO,IAAI,SAAS;AAClB,iBAAa;AACb,eAAW,WAAW,MAAM;AAC1B,iBAAW;AACX,eAAS,GAAG;AAAA,OACX;AAAA;AAAA;;;ACPP,IAAI,QAAQ;AAEZ,IAAO,kBAAQ,MAAM;AACnB,MAAI,QAAQ;AACZ,MAAI,SAAS;AAEb,MAAI,QAAQ,cAAc,gBAAgB,YAAY;AACpD,YAAQ,OAAO;AACf,aAAS,OAAO;AAAA;AAGlB,WAAS;AACT,YAAU;AAEV,WAAS,KAAK,MAAM,SAAS,OAAO;AACpC,UAAQ,KAAK,MAAM,QAAQ,OAAO;AAElC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,QACI,QAAQ;AACV,aAAO;AAAA;AAAA,QAEL,MAAM,GAAG;AACX,cAAQ;AAAA;AAAA;AAAA;;;ACPd,IAAI,OAAO,WAAW,aAAa;AAAA,WAExB,OAAO,WAAW,aAAa;AACzC,SAAO,SAAS;AAAA,WACN,OAAO,SAAS,aAAa;AACvC,OAAK,SAAS;AAAA,OACR;AACN,QAAM,IAAI,MAAM;AAAA;AAcjB,IAAM,SAAS,MAAM;AACpB,QAAM,MAAM,IAAI,MAAM;AACtB,MAAI,OAAO;AACX,SAAO;AAAA;AAGR,IAAI,CAAC,OAAO,IAAI;AACf,MAAI,YAAY;AAChB,SAAO,KAAK;AAAA,IACX,WAAW,CAAE,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ;AAAA,IACvF,UAAU,IAAI,KAAK;AAClB,mBAAa,QAAQ,OAAO;AAC5B,YAAM,KAAK,UAAU,YAAY;AACjC,UAAI,MAAM,IAAI;AACb,gBAAQ,IAAI,UAAU,OAAO,GAAG;AAChC,oBAAY,UAAU,OAAO,KAAK;AAAA;AAEnC,aAAO,IAAI;AAAA;AAAA,IAEZ,MAAM,IAAI,KAAK,QAAQ,QAAQ,UAAU,UAAU;AAClD,UAAI,WAAW,KAAK,WAAW,IAAI,UAAU,aAAa,MAAM;AAC/D,iBAAS;AACT;AAAA;AAED,YAAM,IAAI,KAAK,UAAU,IAAI;AAC7B,eAAS,MAAM;AAAA;AAAA,IAEhB,MAAM,MAAM,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACvC,MAAM,MAAM,KAAK,KAAK,UAAU;AAAE,eAAS;AAAA;AAAA,IAC3C,MAAM,IAAI,UAAU;AAAE,eAAS;AAAA;AAAA,IAC/B,OAAO,IAAI,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACtC,OAAO,IAAI,KAAK,KAAK,UAAU;AAAE,eAAS;AAAA;AAAA,IAC1C,MAAM,IAAI,UAAU;AAAE,eAAS;AAAA;AAAA,IAC/B,MAAM,IAAI,UAAU;AAAE,eAAS;AAAA;AAAA,IAC/B,UAAU,IAAI,QAAQ,UAAU;AAAE,eAAS;AAAA;AAAA,IAC3C,OAAO,MAAM,KAAK,KAAK,UAAU;AAAE,eAAS;AAAA;AAAA,IAC5C,KAAK,MAAM,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACtC,MAAM,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACjC,MAAM,MAAM,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACvC,KAAK,MAAM,OAAO,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IAC7C,KAAK,IAAI,QAAQ,QAAQ,QAAQ,UAAU,UAAU;AAAE,eAAS;AAAA;AAAA,IAChE,QAAQ,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACnC,SAAS,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACpC,OAAO,MAAM,IAAI,UAAU;AAAE,eAAS;AAAA;AAAA,IACtC,MAAM,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACjC,KAAK,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IAChC,QAAQ,MAAM,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IACzC,SAAS,MAAM,QAAQ,UAAU;AAAE,eAAS;AAAA;AAAA,IAC5C,OAAO,MAAM,UAAU;AAAE,eAAS;AAAA;AAAA,IAClC,OAAO,MAAM,OAAO,OAAO,UAAU;AAAE,eAAS;AAAA;AAAA;AAAA;AAIlD,IAAI,CAAC,OAAO,SAAS;AACpB,SAAO,UAAU;AAAA,IAChB,SAAS;AAAE,aAAO;AAAA;AAAA,IAClB,SAAS;AAAE,aAAO;AAAA;AAAA,IAClB,UAAU;AAAE,aAAO;AAAA;AAAA,IACnB,UAAU;AAAE,aAAO;AAAA;AAAA,IACnB,YAAY;AAAE,YAAM;AAAA;AAAA,IACpB,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAE,YAAM;AAAA;AAAA,IAChB,MAAM;AAAE,YAAM;AAAA;AAAA,IACd,QAAQ;AAAE,YAAM;AAAA;AAAA;AAAA;AAIlB,IAAI,CAAC,OAAO,UAAU,OAAO,SAAS;AACrC,QAAM,aAAa,QAAQ;AAC3B,SAAO,SAAS;AAAA,IACf,gBAAgB,GAAG;AAClB,iBAAW,eAAe;AAAA;AAAA;AAAA;AAI7B,IAAI,CAAC,OAAO,QAAQ;AACnB,QAAM,IAAI,MAAM;AAAA;AAGjB,IAAI,CAAC,OAAO,aAAa;AACxB,SAAO,cAAc;AAAA,IACpB,MAAM;AACL,YAAM,CAAC,KAAK,QAAQ,QAAQ;AAC5B,aAAO,MAAM,MAAO,OAAO;AAAA;AAAA;AAAA;AAK9B,IAAI,CAAC,OAAO,eAAe,OAAO,SAAS;AAC1C,SAAO,cAAc,QAAQ,QAAQ;AAAA;AAEtC,IAAI,CAAC,OAAO,aAAa;AACxB,QAAM,IAAI,MAAM;AAAA;AAGjB,IAAI,CAAC,OAAO,eAAe,OAAO,SAAS;AAC1C,SAAO,cAAc,QAAQ,QAAQ;AAAA;AAEtC,IAAI,CAAC,OAAO,aAAa;AACxB,QAAM,IAAI,MAAM;AAAA;AAGjB,IAAM,UAAU,IAAI;AACpB,IAAM,UAAU,IAAI,YAAY;AAChC,IAAI,UAAU;AAEd,uBAAqB;AAAA,EAqBpB,cAAc;AAnBd,mBAAiB;AAejB,kBAAkB;AAElB,wBAAuC;AAGtC,SAAK,oBAAoB,IAAI;AAC7B,SAAK,yBAAyB;AAE9B,UAAM,MAAM,MAAM;AAEjB,aAAO,IAAI,SAAS,KAAK,MAAM,QAAQ,OAAO;AAAA;AAG/C,UAAM,WAAW,CAAC,MAAM,MAAM;AAC7B,YAAM,UAAU,OAAO,GAAG,GAAG;AAC7B,YAAM,UAAU,OAAO,GAAG,KAAK,MAAM,IAAI,aAAa;AAAA;AAGvD,UAAM,WAAW,CAAC,SAAS;AAC1B,YAAM,MAAM,MAAM,UAAU,OAAO,GAAG;AACtC,YAAM,OAAO,MAAM,SAAS,OAAO,GAAG;AACtC,aAAO,MAAM,OAAO;AAAA;AAGrB,UAAM,YAAY,CAAC,SAAS;AAC3B,YAAM,IAAI,MAAM,WAAW,MAAM;AACjC,UAAI,MAAM,GAAG;AACZ,eAAO;AAAA;AAER,UAAI,CAAC,MAAM,IAAI;AACd,eAAO;AAAA;AAGR,YAAM,KAAK,MAAM,UAAU,MAAM;AACjC,aAAO,KAAK,QAAQ;AAAA;AAGrB,UAAM,aAAa,CAAC,MAAM,MAAM;AAC/B,YAAM,UAAU;AAEhB,UAAI,OAAO,MAAM,UAAU;AAC1B,YAAI,MAAM,IAAI;AACb,gBAAM,UAAU,OAAO,GAAG,SAAS;AACnC,gBAAM,UAAU,MAAM,GAAG;AACzB;AAAA;AAED,YAAI,MAAM,GAAG;AACZ,gBAAM,UAAU,OAAO,GAAG,SAAS;AACnC,gBAAM,UAAU,MAAM,GAAG;AACzB;AAAA;AAED,cAAM,WAAW,MAAM,GAAG;AAC1B;AAAA;AAGD,cAAQ;AAAA,aACF;AACJ,gBAAM,WAAW,MAAM,GAAG;AAC1B;AAAA,aACI;AACJ,gBAAM,UAAU,OAAO,GAAG,SAAS;AACnC,gBAAM,UAAU,MAAM,GAAG;AACzB;AAAA,aACI;AACJ,gBAAM,UAAU,OAAO,GAAG,SAAS;AACnC,gBAAM,UAAU,MAAM,GAAG;AACzB;AAAA,aACI;AACJ,gBAAM,UAAU,OAAO,GAAG,SAAS;AACnC,gBAAM,UAAU,MAAM,GAAG;AACzB;AAAA;AAGF,UAAI,KAAK,KAAK,KAAK,IAAI;AACvB,UAAI,OAAO,QAAW;AACrB,aAAK,KAAK,QAAQ;AAClB,YAAI,OAAO,QAAW;AACrB,eAAK,KAAK,QAAQ;AAAA;AAEnB,aAAK,QAAQ,MAAM;AACnB,aAAK,aAAa,MAAM;AACxB,aAAK,KAAK,IAAI,GAAG;AAAA;AAElB,WAAK,aAAa;AAClB,UAAI,WAAW;AACf,cAAQ,OAAO;AAAA,aACT;AACJ,qBAAW;AACX;AAAA,aACI;AACJ,qBAAW;AACX;AAAA,aACI;AACJ,qBAAW;AACX;AAAA;AAEF,YAAM,UAAU,OAAO,GAAG,UAAU,UAAU;AAC9C,YAAM,UAAU,MAAM,IAAI;AAAA;AAG3B,UAAM,YAAY,CAAC,OAAO,QAAQ;AACjC,aAAO,IAAI,WAAW,KAAK,MAAM,QAAQ,OAAO,QAAQ,OAAO;AAAA;AAGhE,UAAM,oBAAoB,CAAC,OAAO,QAAQ;AACzC,YAAM,IAAI,IAAI,MAAM;AACpB,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC7B,UAAE,KAAK,UAAU,QAAQ,IAAI;AAAA;AAE9B,aAAO;AAAA;AAGR,UAAM,aAAa,CAAC,KAAK,QAAQ;AAChC,aAAO,QAAQ,OAAO,IAAI,SAAS,KAAK,MAAM,QAAQ,OAAO,QAAQ,KAAK;AAAA;AAG3E,UAAM,aAAa,KAAK,QAAQ,YAAY;AAC5C,SAAK,eAAe;AAAA,MACnB,eAAe;AAAA,QAEd,UAAU,SAAU,IAAI,UAAU,UAAU,cAAc;AACzD,cAAI,WAAW;AACf,cAAI,MAAM,GAAG;AACZ,qBAAS,SAAS,GAAG,SAAS,UAAU,UAAU;AACjD,kBAAI,UAAU,WAAW,SAAS;AAClC,kBAAI,MAAM,MAAM,UAAU,UAAU,GAAG;AACvC,kBAAI,MAAM,MAAM,UAAU,UAAU,GAAG;AACvC,uBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC7B,oBAAI,IAAI,MAAM,SAAS,MAAM;AAC7B,oBAAI,KAAK,IAAI;AAAA,2BAEF,KAAK,IAAI;AAEnB,sBAAI,OAAO,QAAQ,OAAO,IAAI,WAAW;AACzC,4BAAU;AACV,0BAAQ,IAAI;AAAA,uBACN;AACN,0BAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,iBAIV;AACN,oBAAQ,MAAM,4BAA4B;AAAA;AAE3C,gBAAM,UAAU,cAAc,UAAU;AACxC,iBAAO;AAAA;AAAA;AAAA,MAGT,KAAK;AAAA,QAEJ,iBAAiB,MAAM;AACtB,iBAAO,aAAa,YAAY;AAAA;AAAA,QAIjC,sBAAsB,CAAC,YAAY;AAElC,qBAAW,KAAK,MAAM,QAAQ,cAAc;AAAA;AAAA,QAI7C,gBAAgB,CAAC,SAAS;AACzB,gBAAM,8BAA8B;AAAA;AAAA,QAIrC,0BAA0B,CAAC,OAAO;AAGjC,kBAAQ,MAAM;AAAA;AAAA,QAIf,wBAAwB,CAAC,SAAS,WAAW,cAAc;AAC1D,gBAAM,IAAI,WAAW,WAAW;AAChC,qBAAW,SAAS;AAAA;AAAA,QAIrB,uBAAuB,CAAC,QAAQ,QAAQ,OAAO,UAAU;AACxD,cAAI,OAAO,WAAW,OAAO;AAC7B,cAAI,QAAQ,UAAU;AACtB,cAAI,SAAS,QAAQ,IAAI,OAAO;AAChC,qBAAW,QAAQ;AAAA;AAAA,QAIpB,uBAAuB,CAAC,QAAQ,OAAO,OAAO,WAAW;AACxD,gBAAM,IAAI,UAAU;AACpB,gBAAM,IAAI,WAAW,OAAO;AAC5B,gBAAM,IAAI,UAAU;AACpB,kBAAQ,IAAI,GAAG,GAAG;AAAA;AAAA,QAInB,0BAA0B,CAAC,QAAQ,OAAO,UAAU;AACnD,gBAAM,IAAI,UAAU;AACpB,gBAAM,IAAI,WAAW,OAAO;AAC5B,kBAAQ,eAAe,GAAG;AAAA;AAAA,QAI3B,yBAAyB,CAAC,UAAU,QAAQ,MAAM;AACjD,qBAAW,UAAU,QAAQ,IAAI,UAAU,SAAS;AAAA;AAAA,QAIrD,4BAA4B,CAAC,QAAQ,GAAG,WAAW;AAClD,kBAAQ,IAAI,UAAU,SAAS,GAAG,UAAU;AAAA;AAAA,QAI7C,wBAAwB,CAAC,UAAU,QAAQ,OAAO,OAAO,UAAU,aAAa;AAC/E,gBAAM,IAAI,UAAU;AACpB,gBAAM,OAAO,WAAW,OAAO;AAC/B,gBAAM,OAAO,kBAAkB,UAAU;AACzC,cAAI;AACH,kBAAM,IAAI,QAAQ,IAAI,GAAG;AACzB,uBAAW,UAAU,QAAQ,MAAM,GAAG,GAAG;AACzC,kBAAM,SAAS,WAAW,GAAG;AAAA,mBACrB,KAAP;AACD,uBAAW,UAAU;AACrB,kBAAM,SAAS,WAAW,GAAG;AAAA;AAAA;AAAA,QAK/B,0BAA0B,CAAC,UAAU,QAAQ,UAAU,aAAa;AACnE,cAAI;AACH,kBAAM,IAAI,UAAU;AACpB,kBAAM,OAAO,kBAAkB,UAAU;AACzC,uBAAW,UAAU,QAAQ,MAAM,GAAG,QAAW;AACjD,kBAAM,SAAS,WAAW,GAAG;AAAA,mBACrB,KAAP;AACD,uBAAW,UAAU;AACrB,kBAAM,SAAS,WAAW,GAAG;AAAA;AAAA;AAAA,QAK/B,uBAAuB,CAAC,UAAU,QAAQ,UAAU,aAAa;AAChE,gBAAM,IAAI,UAAU;AACpB,gBAAM,OAAO,kBAAkB,UAAU;AACzC,cAAI;AACH,uBAAW,UAAU,QAAQ,UAAU,GAAG;AAC1C,kBAAM,SAAS,WAAW,GAAG;AAAA,mBACrB,KAAP;AACD,uBAAW,UAAU;AACrB,kBAAM,SAAS,WAAW,GAAG;AAAA;AAAA;AAAA,QAK/B,0BAA0B,CAAC,WAAW;AACrC,iBAAO,UAAU,QAAQ;AAAA;AAAA,QAI1B,iCAAiC,CAAC,UAAU,WAAW;AACtD,gBAAM,IAAI,OAAO,UAAU;AAC3B,gBAAM,MAAM,QAAQ,OAAO;AAC3B,qBAAW,UAAU;AACrB,mBAAS,WAAW,GAAG,IAAI;AAAA;AAAA,QAI5B,8BAA8B,CAAC,QAAQ,WAAW,WAAW,cAAc;AAC1E,gBAAM,MAAM,UAAU;AACtB,oBAAU,WAAW,WAAW,IAAI;AAAA;AAAA,QAIrC,8BAA8B,CAAC,QAAQ,WAAW;AACjD,iBAAO,UAAU,mBAAmB,UAAU;AAAA;AAAA,QAI/C,4BAA4B,CAAC,UAAU,WAAW,UAAU,UAAU,gBAAgB;AACrF,cAAI,wBAAwB;AAC5B,cAAI,uBAAuB,WAAW;AAEtC,gBAAM,MAAM,UAAU,WAAW;AACjC,gBAAM,MAAM,UAAU;AACtB,cAAI,CAAE,gBAAe,aAAa;AACjC,kBAAM,SAAS,sBAAsB;AACrC;AAAA;AAED,gBAAM,SAAS,IAAI,SAAS,GAAG,IAAI;AACnC,cAAI,IAAI;AACR,mBAAS,uBAAuB,OAAO;AACvC,gBAAM,SAAS,sBAAsB;AAAA;AAAA,QAMtC,4BAA4B,CAAC,UAAU,WAAW,aAAa,YAAY,eAAe;AACzF,cAAI,wBAAwB;AAC5B,cAAI,uBAAuB,WAAW;AAEtC,gBAAM,MAAM,UAAU;AACtB,gBAAM,MAAM,UAAU,aAAa;AACnC,cAAI,CAAE,gBAAe,aAAa;AACjC,kBAAM,SAAS,sBAAsB;AACrC;AAAA;AAED,gBAAM,SAAS,IAAI,SAAS,GAAG,IAAI;AACnC,cAAI,IAAI;AACR,mBAAS,uBAAuB,OAAO;AACvC,gBAAM,SAAS,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,QAMnC,IAAI,UAAU;AACnB,SAAK,QAAQ;AACb,SAAK,UAAU;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAED,SAAK,eAAe;AACpB,SAAK,OAAO,IAAI;AAChB,SAAK,UAAU;AACf,SAAK,SAAS;AAEd,UAAM,MAAM,IAAI,SAAS,KAAK,MAAM,QAAQ,OAAO;AAEnD,WAAO,MAAM;AACZ,YAAM,kBAAkB,IAAI,QAAQ,CAAC,YAAY;AAChD,aAAK,0BAA0B,MAAM;AACpC,cAAI,KAAK,QAAQ;AAChB,kBAAM,IAAI,MAAM;AAAA;AAEjB,qBAAW,SAAS;AAAA;AAAA;AAGtB,WAAK,MAAM,QAAQ;AACnB,UAAI,KAAK,QAAQ;AAChB;AAAA;AAED,YAAM;AAAA;AAAA;AAAA,EAIR,UAAU;AACT,QAAI,KAAK,QAAQ;AAChB,YAAM,IAAI,MAAM;AAAA;AAEjB,SAAK,MAAM,QAAQ;AACnB,QAAI,KAAK,QAAQ;AAChB,WAAK;AAAA;AAAA;AAAA,EAIP,iBAAiB,IAAI;AACpB,UAAM,MAAK;AACX,WAAO,WAAY;AAClB,YAAM,QAAQ,CAAE,IAAQ,MAAM,MAAM,MAAM,WAAW,QAAQ;AAC7D,UAAG,gBAAgB;AACnB,UAAG;AACH,aAAO,MAAM;AAAA;AAAA;AAAA;AA/XhB,IAAO,cAAP;;;AC/IA,IAAM,KAAK,IAAI;AAEf,IAAI;AAEJ,IAAO,wBAAQ,CAAC,WAAW,8BAAgD,IAAI,QAAQ,CAAC,SAAS,WAAW;AAE1G,MAAI,0BAA0B,aAAa;AACzC,gBAAY,qBAAqB,MAAM,WAAW,GAAG,cAAc,KAAK,SAAU,KAAK;AACrF,aAAO,IAAI;AACX,SAAG,IAAI;AACP,cAAQ,KAAK;AAAA;AAAA,SAEV;AACL,UAAM,UAAU,KAAK,UACnB,KAAK,eACL,KAAK,WACL,YAAY,YAAY,OAAO,GAAG,cAAc,KAAK,SAAU,KAAK;AAClE,aAAO,IAAI;AACX,SAAG,IAAI;AACP,cAAQ,KAAK;AAAA;AAAA;AAAA;;;;;;;;;AClBrB,IAAO,uBAAQ,CAAC;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,MAKI;AACJ,MAAI,UAAS,SAAS,cAAc;AACpC,WAAS,KAAK,OAAO;AAErB,UAAO,QAAQ;AACf,UAAO,SAAS;AAEhB,QAAM,KAAK,QAAO,WAAW;AAE7B,QAAM,eAAe,GAAG,aAAa,GAAG;AACxC,KAAG,aAAa,cAAc;AAC9B,KAAG,cAAc;AAEjB,MAAI,CAAC,GAAG,mBAAmB,cAAc,GAAG,iBAAiB;AAC3D,YAAQ,MAAM,GAAG,iBAAiB;AAClC,UAAM,IAAI,MAAM;AAAA;AAGlB,QAAM,iBAAiB,GAAG,aAAa,GAAG;AAC1C,KAAG,aAAa,gBAAgB;AAChC,KAAG,cAAc;AAEjB,MAAI,CAAC,GAAG,mBAAmB,gBAAgB,GAAG,iBAAiB;AAC7D,YAAQ,MAAM,GAAG,iBAAiB;AAClC,UAAM,IAAI,MAAM;AAAA;AAGlB,QAAM,UAAU,GAAG;AACnB,KAAG,aAAa,SAAS;AACzB,KAAG,aAAa,SAAS;AACzB,KAAG,YAAY;AAEf,MAAI,CAAC,GAAG,oBAAoB,SAAS,GAAG,cAAc;AACpD,YAAQ,MAAM,GAAG,kBAAkB;AACnC,UAAM,IAAI,MAAM;AAAA;AAGlB,KAAG,WAAW;AAEd,QAAM,mBAAmB,GAAG,kBAAkB,SAAS;AACvD,QAAM,qBAAqB,GAAG,mBAAmB,SAAS;AAC1D,KAAG,UAAU,oBAAoB,QAAO,OAAO,QAAO;AAEtD,QAAM,gBAAgB,GAAG,mBAAmB,SAAS;AACrD,KAAG,UAAU,eAAe;AAG5B,SAAO,WAAW,CAAC,MAAM;AACvB,OAAG,UAAU,eAAe,IAAI,IAAI;AAAA;AAGtC,QAAM,SAAS,GAAG;AAClB,KAAG,WAAW,GAAG,cAAc;AAC/B,KAAG,WACD,GAAG,cACH,IAAI,aAAa,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,KACzD,GAAG;AAGL,KAAG,wBAAwB;AAC3B,KAAG,oBAAoB,kBAAkB,GAAG,GAAG,OAAO,OAAO,GAAG;AAEhE,KAAG,YAAY,GAAG,kBAAkB;AAEpC,QAAM,UAAU,GAAG;AACnB,KAAG,YAAY,GAAG,YAAY;AAE9B,KAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG;AACtD,KAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG;AACtD,KAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG;AAC1D,KAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG;AAE1D,qBAAkB;AAChB,OAAG,WACD,GAAG,YACH,GACA,GAAG,WACH,OACA,QACA,GACA,GAAG,WACH,GAAG,eACH;AAGF,OAAG,WAAW,GAAG,WAAW,GAAG;AAAA;AAGjC,kBAAgB,IAAI,IAAI,GAAG;AACzB,YAAQ;AACR,aAAS;AACT,aAAS;AAAA;AAGX,SAAO;AAAA,IACL;AAAA,IACA;AAAA,QACI,QAAQ;AACV,aAAO;AAAA;AAAA,QAEL,SAAS;AACX,aAAO;AAAA;AAAA,IAET,IAAI;AAAA;AAAA;;;AClHR,IAAO,sBAAQ,MAAM;AACnB,MAAI,eACF,OAAO,gBACP,OAAO,yBACP;AAEF,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,MACL,WAAW,CAAC,MAAM;AAAA;AAAA;AAAA;AAItB,QAAM,MAAoB,IAAI;AAE9B,QAAM,aAAa;AACnB,QAAM,YAAa,WAAY;AAC7B,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAC5B,SAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAEnC,UAAM,OAAO,IAAI,sBAAsB,YAAY,GAAG;AACtD,SAAK,iBAAiB,SAAU,GAAG;AACjC,YAAM,SAAS,EAAE,aAAa,eAAe;AAC7C,eAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,cAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,aAAK,UAAU,KAAK,QAAQ;AAC5B,aAAK,UAAU,KAAK,QAAQ;AAC5B,aAAK,QAAQ,KAAK,QAAQ;AAC1B,aAAK,SAAS,KAAK,QAAQ;AAC3B,aAAK,OAAO,KAAK,QAAQ;AACzB,aAAK,UAAU,KAAK,QAAQ;AAC5B,eAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,QAAQ;AACvD,eAAO,MAAM;AACb,aAAK,QAAQ;AAAA;AAAA;AAGjB,WAAO;AAAA;AAGT,QAAM,WAAW,IAAI;AAErB,WAAS,KAAK,QAAQ;AAEtB,YAAU,QAAQ;AAElB,WAAS,QAAQ,IAAI;AAErB,SAAO;AAAA,IACL,WAAW,CAAC,MAAM;AAChB,eAAS,KAAK,QAAQ;AAAA;AAAA,IAExB,QAAQ;AACN,UAAI,UAAU,aAAa,IAAI;AAAA;AAAA,IAEjC,SAAS;AACP,UAAI,UAAU,aAAa,IAAI;AAAA;AAAA;AAAA;;;ACpDrC,IAAO,2BAAQ,CAAC,WAAW;AACzB,MAAI,GACF,IAAI;AACN,MAAI,eAAe;AAEnB,QAAM,YAAY;AAClB,QAAM,aAAa;AAEnB,QAAM,OAAO;AAEb,SAAO;AAAA,IACL,OAAO,MAAM;AACX,UAAI,YAAY;AAAA;AAAA,IAElB,KAAK,MAAM;AACT;AAEA,UAAI,GAAG;AAEL,uBAAe,CAAC,GAAG,aAAa,MAAM,OAAO,YAAY,QAAQ;AAAA;AAInE,UAAI,IAAI,MAAM,GAAG;AAEf,YAAI,MAAM;AACV,iBAAS,KAAI,GAAG,KAAI,aAAa,QAAQ,MAAK;AAC5C,iBAAO,aAAa;AAAA;AAEtB,cAAM,MAAM,KAAK,MAAM,MAAM,aAAa;AAE1C,gBAAQ,IAAI,4BAA4B,KAAK;AAG7C,YAAI,MAAM,YAAY,MAAM,MAAM,YAAY;AAAI;AAClD,gBAAQ,IAAI,WAAW,KAAK;AAE5B,YAAI,MAAM,WAAW;AAGnB,gBAAM,cAAe,aAAY,OAAO;AAExC,gBAAM,IAAI,IAAI,cAAc;AAC5B,kBAAQ,IAAI,4BAA4B;AAExC,eAAK,QAAQ,KAAK,IAAI,KAAK,QAAQ,GAAG;AAAA,eACjC;AACL,gBAAM,aAAa,KAAK,IAAI,MAAM,WAAW,cAAc;AAE3D,gBAAM,IAAI,IAAI,aAAa;AAC3B,kBAAQ,IAAI,4BAA4B;AACxC,eAAK,SAAS;AAAA;AAIhB,cAAM,CAAE,OAAO,UAAW;AAC1B,eAAO,OAAO;AAAA;AAAA;AAAA;AAAA;;;ACxDtB,IAAI,WAAW;AACf,IAAI,OAAO;AACX,IAAI,WAAW;AACf,IAAI,WAAW;AAEf,IAAI;AACJ,IAAI,WAAW;AACf,IAAM,SAAS,MAAM;AAEnB,MAAI;AAAU;AAEd,MAAI,QAAQ;AAEZ,MAAI,6BAA6B,QAAQ;AAGzC,UAAQ;AAER,MAAI,6BAA6B,GAAG;AAClC,eAAW;AAAA;AAIb,QAAM,IAAI,WAAW;AACrB,aAAW,KAAK,MAAM,IAAI,WAAW,OAAO;AAC5C,MAAI,CAAC;AAAI,SAAK;AAGd,OAAK;AAAA;AAGP,iBAAiB;AACf,aAAW;AACX,UAAQ,IAAI;AAAA;AAGd,kBAAkB;AAChB,aAAW;AACX,aAAW;AACX,UAAQ,IAAI;AAAA;AAId,qBAAqB,GAAG;AACtB,UAAQ,IAAI,wBAAwB;AACpC,aAAW;AAAA;AAIb,uBAAuB;AACrB,SAAO;AAAA;AAGT,qBAAqB,GAAG;AACtB,SAAO,WAAW,KAAK,MAAM,WAAW;AACxC,UAAQ,IAAI,wBAAwB;AAAA;AAItC,IAAO,qBAAQ;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;;;AC5DF,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,IAAI,YAAY;AAEhB,oBAAoB;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,GAKC;AACD,MAAI,CAAE,OAAO,UAAW;AAExB,UAAQ,IAAI,eAAe,IAAK,UAAU;AAE1C,MAAI,SAAS,IAAI,WAAW,QAAQ;AAKpC,SAAO,oBAAoB;AAE3B,YAAU,MAAM,sBAAc;AAC9B,QAAM,QAAQ,aAAa,OAAO;AAElC,WAAS,qBAAa,CAAE,QAAQ,OAAO;AAEvC,UAAQ;AAER,qBAAW,YAAY,aAAY;AACnC,qBAAW,YAAY,aAAY;AAEnC,kBAAgB,IAAI,IAAI;AACtB,QAAI,MAAM,SAAS,MAAM,QAAQ;AAC/B,cAAQ;AACR,eAAS;AAET,eAAS,IAAI,WAAW,QAAQ;AAChC,aAAO,oBAAoB;AAC3B,cAAQ,OAAO,OAAO;AACtB,aAAO,OAAO,OAAO,QAAQ;AAAA;AAAA;AAIjC,QAAM,oBAAoB,yBAAwB;AAElD,MAAI;AACJ,MAAI,UAAU;AACd,MAAI,aAAa;AACjB,MAAI,gBAAgB;AAEpB,6BAA2B;AACzB,QAAI;AAAU;AACd,oBAAgB,MAAM,QAAQ;AAC9B,eAAW,MAAM,QAAQ,OAAO,mBAAW;AAC3C,cAAU;AACV,eAAW;AAAA;AAGb,2BAAwB;AACtB,QAAI,CAAC,aAAa,CAAC,cAAc,CAAC,eAAe;AACvC,YAAM,kBAAkB;AAChC,YAAM;AACN,yBAAW;AACX,YAAM,UAAU,KAAK,IAAI,MAAM,UAAU;AACzC,aAAO;AACC,YAAM,kBAAkB;AAAA,WAC3B;AACL,YAAM;AAAA;AAGR,0BAAsB;AAAA;AAGxB,SAAO,iBACL,UACA,iBAAS,MAAM;AACb,UAAM,CAAE,OAAO,IAAI,QAAQ,MAAO;AAClC,WAAO,IAAI;AAAA,KACV;AAGL;AAAA;AAGF,kBAAiB;AACf,cAAY,CAAC;AACb,MAAI,WAAW;AACb,uBAAW;AACX,UAAM;AAAA,SACD;AACL,uBAAW;AACX,UAAM;AAAA;AAAA;AAIV,gBAAgB;AACd,MAAI,WAAW;AACb,gBAAY;AACZ,uBAAW;AACX,UAAM;AAAA;AAAA;AAIV,wBAAuB;AACrB,SAAO,mBAAW;AAAA;AAGpB,OAAO,iBAAiB,QAAQ;AAChC,OAAO,iBAAiB,SAAS;AACjC,OAAO,iBAAiB,aAAa;AACrC,OAAO,iBAAiB,YAAY;AAEpC,IAAO,mBAAQ;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;",
  "names": []
}
